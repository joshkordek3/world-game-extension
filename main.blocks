<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="GMFN(Isha9oz|vmJ$tee" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="7L-,^*|/2XezpvdJb[0X" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace World {" line1="//% block=&quot;move $leftrightupdown left/right/up/down by $steps&quot;" line2="//% group=&quot;Moving&quot;" line3="export function move (leftrightupdown: string, steps: number) {" line4="    if (leftrightupdown == &quot;left&quot;) {" line5="        leftright_difference += steps" line6="    } else if (leftrightupdown == &quot;right&quot;) {" line7="        leftright_difference += 0 - steps" line8="    } else if (leftrightupdown == &quot;up&quot;) {" line9="        updown_difference += steps" line10="    } else if (leftrightupdown == &quot;down&quot;) {" line11="        updown_difference += 0 - steps" line12="    }" line13="    show()" line14="}" line15="//% block=&quot;update the display of the world&quot;" line16="//% group=&quot;Diplaying&quot;" line17="export function show () {" line18="    basic.clearScreen()" line19="    for (let index = 0; index &lt;= world.length - 1; index++) {" line20="        led.plot(parseFloat(world[index].substr(0, 2)) + leftright_difference, parseFloat(world[index].substr(2, 2)) + updown_difference)" line21="    }" line22="}" line23="//% block=&quot;x position&quot;" line24="//% group=&quot;Position&quot;" line25="export function x_pos () {" line26="    return 2 - leftright_difference" line27="}" line28="//% block=&quot;y position&quot;" line29="//% group=&quot;Position&quot;" line30="export function y_pos () {" line31="    return 2 - updown_difference" line32="}" line33="//% block=&quot;go to x: $x y: $y&quot;" line34="//% group=&quot;Position&quot;" line35="export function goto (x: number, y: number) {" line36="    updown_difference = 2 - y" line37="    leftright_difference = 2 - x" line38="    show()" line39="}" line40="//% block=&quot;number of blocks in the world&quot;" line41="//% group=&quot;Position&quot;" line42="export function world_blocks_detect () {" line43="    return world.length" line44="}" line45="//% block=&quot;world $xy (x/y) coordinate at item $place (min=1)&quot;" line46="//% group=&quot;Position&quot;" line47="export function world_blocks (xy: string, place: number) {" line48="    if (xy = &quot;x&quot;) {" line49="        return parseFloat(world[place - 1 ].substr(2, 2))" line50="    } else if (xy = &quot;y&quot;) {" line51="        return parseFloat(world[place - 1].substr(0, 2)) " line52="    }" line53="    return 0" line54="}" line55="//% block=&quot;world (array)&quot;" line56="//% group=&quot;Position&quot;" line57="export function all_world_blocks () {" line58="    return world" line59="}" line60="//% block=&quot;add by $columnrow (column/row) from $from_xy to $to_xy on $xy&quot;" line61="//% group=&quot;Creating&quot;" line62="export function add_by (columnrow: string, from_xy: number, to_xy: number, xy: number) {" line63="    if (columnrow == &quot;column&quot;) {" line64="        for (let index2 = 0; index2 &lt;= to_xy - from_xy; index2++) {" line65="            add(xy, index2 + from_xy)" line66="        }" line67="    } else if (columnrow == &quot;row&quot;) {" line68="        for (let index3 = 0; index3 &lt;= to_xy - from_xy; index3++) {" line69="            add(index3 + from_xy, xy)" line70="        }" line71="    }" line72="}" line73="//% block=&quot;add x $x and y $y to the world&quot;" line74="//% group=&quot;Creating&quot;" line75="export function add (x: number, y: number) {" line76="    temp_txt = convertToText(x)" line77="    temp_txt2 = convertToText(y)" line78="    for (let index4 = 0; index4 &lt; 2 - temp_txt.length; index4++) {" line79="        temp_txt = &quot;0&quot; + temp_txt" line80="    }" line81="    for (let index5 = 0; index5 &lt; 2 - temp_txt2.length; index5++) {" line82="        temp_txt2 = &quot;0&quot; + temp_txt2" line83="    }" line84="    world.push(&quot;&quot; + temp_txt + temp_txt2)" line85="}" line86="let temp_txt2 = &quot;&quot;" line87="let temp_txt = &quot;&quot;" line88="let world: string[] = []" line89="let updown_difference = 0" line90="let leftright_difference = 0" line91="}" numlines="92"></mutation></block></statement></block></xml>